{"version":3,"file":"index.es6.js","sources":["../src/clipboard.ts","../src/element.ts","../src/platform.ts","../src/selector.ts"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2019, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for clipboard related functionality.\n */\nexport namespace ClipboardExt {\n  /**\n   * Copy text to the system clipboard.\n   *\n   * @param text - The text to copy to the clipboard.\n   */\n  export function copyText(text: string): void {\n    // Fetch the document body.\n    const body = document.body;\n\n    // Set up the clipboard event listener.\n    const handler = (event: ClipboardEvent) => {\n      // Stop the event propagation.\n      event.preventDefault();\n      event.stopPropagation();\n\n      // Set the clipboard data.\n      event.clipboardData!.setData('text', text);\n\n      // Remove the event listener.\n      body.removeEventListener('copy', handler, true);\n    };\n\n    // Add the event listener.\n    body.addEventListener('copy', handler, true);\n\n    // Trigger the event.\n    document.execCommand('copy');\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for element related utilities.\n */\nexport namespace ElementExt {\n  /**\n   * An object which holds the border and padding data for an element.\n   */\n  export interface IBoxSizing {\n    /**\n     * The top border width, in pixels.\n     */\n    borderTop: number;\n\n    /**\n     * The left border width, in pixels.\n     */\n    borderLeft: number;\n\n    /**\n     * The right border width, in pixels.\n     */\n    borderRight: number;\n\n    /**\n     * The bottom border width, in pixels.\n     */\n    borderBottom: number;\n\n    /**\n     * The top padding width, in pixels.\n     */\n    paddingTop: number;\n\n    /**\n     * The left padding width, in pixels.\n     */\n    paddingLeft: number;\n\n    /**\n     * The right padding width, in pixels.\n     */\n    paddingRight: number;\n\n    /**\n     * The bottom padding width, in pixels.\n     */\n    paddingBottom: number;\n\n    /**\n     * The sum of horizontal border and padding.\n     */\n    horizontalSum: number;\n\n    /**\n     * The sum of vertical border and padding.\n     */\n    verticalSum: number;\n  }\n\n  /**\n   * Compute the box sizing for an element.\n   *\n   * @param element - The element of interest.\n   *\n   * @returns The box sizing data for the specified element.\n   */\n  export function boxSizing(element: Element): IBoxSizing {\n    let style = window.getComputedStyle(element);\n    let bt = parseFloat(style.borderTopWidth!) || 0;\n    let bl = parseFloat(style.borderLeftWidth!) || 0;\n    let br = parseFloat(style.borderRightWidth!) || 0;\n    let bb = parseFloat(style.borderBottomWidth!) || 0;\n    let pt = parseFloat(style.paddingTop!) || 0;\n    let pl = parseFloat(style.paddingLeft!) || 0;\n    let pr = parseFloat(style.paddingRight!) || 0;\n    let pb = parseFloat(style.paddingBottom!) || 0;\n    let hs = bl + pl + pr + br;\n    let vs = bt + pt + pb + bb;\n    return {\n      borderTop: bt,\n      borderLeft: bl,\n      borderRight: br,\n      borderBottom: bb,\n      paddingTop: pt,\n      paddingLeft: pl,\n      paddingRight: pr,\n      paddingBottom: pb,\n      horizontalSum: hs,\n      verticalSum: vs\n    };\n  }\n\n  /**\n   * An object which holds the min and max size data for an element.\n   */\n  export interface ISizeLimits {\n    /**\n     * The minimum width, in pixels.\n     */\n    minWidth: number;\n\n    /**\n     * The minimum height, in pixels.\n     */\n    minHeight: number;\n\n    /**\n     * The maximum width, in pixels.\n     */\n    maxWidth: number;\n\n    /**\n     * The maximum height, in pixels.\n     */\n    maxHeight: number;\n  }\n\n  /**\n   * Compute the size limits for an element.\n   *\n   * @param element - The element of interest.\n   *\n   * @returns The size limit data for the specified element.\n   */\n  export function sizeLimits(element: Element): ISizeLimits {\n    let style = window.getComputedStyle(element);\n    let minWidth = parseFloat(style.minWidth!) || 0;\n    let minHeight = parseFloat(style.minHeight!) || 0;\n    let maxWidth = parseFloat(style.maxWidth!) || Infinity;\n    let maxHeight = parseFloat(style.maxHeight!) || Infinity;\n    maxWidth = Math.max(minWidth, maxWidth);\n    maxHeight = Math.max(minHeight, maxHeight);\n    return { minWidth, minHeight, maxWidth, maxHeight };\n  }\n\n  /**\n   * Test whether a client position lies within an element.\n   *\n   * @param element - The DOM element of interest.\n   *\n   * @param clientX - The client X coordinate of interest.\n   *\n   * @param clientY - The client Y coordinate of interest.\n   *\n   * @returns Whether the point is within the given element.\n   */\n  export function hitTest(\n    element: Element,\n    clientX: number,\n    clientY: number\n  ): boolean {\n    let rect = element.getBoundingClientRect();\n    return (\n      clientX >= rect.left &&\n      clientX < rect.right &&\n      clientY >= rect.top &&\n      clientY < rect.bottom\n    );\n  }\n\n  /**\n   * Vertically scroll an element into view if needed.\n   *\n   * @param area - The scroll area element.\n   *\n   * @param element - The element of interest.\n   *\n   * #### Notes\n   * This follows the \"nearest\" behavior of the native `scrollIntoView`\n   * method, which is not supported by all browsers.\n   * https://drafts.csswg.org/cssom-view/#element-scrolling-members\n   *\n   * If the element fully covers the visible area or is fully contained\n   * within the visible area, no scrolling will take place. Otherwise,\n   * the nearest edges of the area and element are aligned.\n   */\n  export function scrollIntoViewIfNeeded(\n    area: Element,\n    element: Element\n  ): void {\n    let ar = area.getBoundingClientRect();\n    let er = element.getBoundingClientRect();\n    if (er.top <= ar.top && er.bottom >= ar.bottom) {\n      return;\n    }\n    if (er.top < ar.top && er.height <= ar.height) {\n      area.scrollTop -= ar.top - er.top;\n      return;\n    }\n    if (er.bottom > ar.bottom && er.height >= ar.height) {\n      area.scrollTop -= ar.top - er.top;\n      return;\n    }\n    if (er.top < ar.top && er.height > ar.height) {\n      area.scrollTop -= ar.bottom - er.bottom;\n      return;\n    }\n    if (er.bottom > ar.bottom && er.height < ar.height) {\n      area.scrollTop -= ar.bottom - er.bottom;\n      return;\n    }\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for platform related utilities.\n */\nexport namespace Platform {\n  /**\n   * A flag indicating whether the platform is Mac.\n   */\n  export const IS_MAC = !!navigator.platform.match(/Mac/i);\n\n  /**\n   * A flag indicating whether the platform is Windows.\n   */\n  export const IS_WIN = !!navigator.platform.match(/Win/i);\n\n  /**\n   * A flag indicating whether the browser is IE.\n   */\n  export const IS_IE = /Trident/.test(navigator.userAgent);\n\n  /**\n   * A flag indicating whether the browser is Edge.\n   */\n  export const IS_EDGE = /Edge/.test(navigator.userAgent);\n\n  /**\n   * Test whether the `accel` key is pressed.\n   *\n   * @param event - The keyboard or mouse event of interest.\n   *\n   * @returns Whether the `accel` key is pressed.\n   *\n   * #### Notes\n   * On Mac the `accel` key is the command key. On all other\n   * platforms the `accel` key is the control key.\n   */\n  export function accelKey(event: KeyboardEvent | MouseEvent): boolean {\n    return IS_MAC ? event.metaKey : event.ctrlKey;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/*-----------------------------------------------------------------------------\n| Copyright (c) 2014-2017, PhosphorJS Contributors\n|\n| Distributed under the terms of the BSD 3-Clause License.\n|\n| The full license is in the file LICENSE, distributed with this software.\n|----------------------------------------------------------------------------*/\n\n/**\n * The namespace for selector related utilities.\n */\nexport namespace Selector {\n  /**\n   * Calculate the specificity of a single CSS selector.\n   *\n   * @param selector - The CSS selector of interest.\n   *\n   * @returns The specificity of the selector.\n   *\n   * #### Undefined Behavior\n   * The selector is invalid.\n   *\n   * #### Notes\n   * This is based on https://www.w3.org/TR/css3-selectors/#specificity\n   *\n   * A larger number represents a more specific selector.\n   *\n   * The smallest possible specificity is `0`.\n   *\n   * The result is represented as a hex number `0x<aa><bb><cc>` where\n   * each component is the count of the respective selector clause.\n   *\n   * If the selector contains commas, only the first clause is used.\n   *\n   * The computed result is cached, so subsequent calculations for the\n   * same selector are extremely fast.\n   */\n  export function calculateSpecificity(selector: string): number {\n    if (selector in Private.specificityCache) {\n      return Private.specificityCache[selector];\n    }\n    let result = Private.calculateSingle(selector);\n    return (Private.specificityCache[selector] = result);\n  }\n\n  /**\n   * Test whether a selector is a valid CSS selector.\n   *\n   * @param selector - The CSS selector of interest.\n   *\n   * @returns `true` if the selector is valid, `false` otherwise.\n   *\n   * #### Notes\n   * The computed result is cached, so subsequent tests for the same\n   * selector are extremely fast.\n   */\n  export function isValid(selector: string): boolean {\n    if (selector in Private.validityCache) {\n      return Private.validityCache[selector];\n    }\n    let result = true;\n    try {\n      Private.testElem.querySelector(selector);\n    } catch (err) {\n      result = false;\n    }\n    return (Private.validityCache[selector] = result);\n  }\n\n  /**\n   * Test whether an element matches a CSS selector.\n   *\n   * @param element - The element of interest.\n   *\n   * @param selector - The valid CSS selector of interest.\n   *\n   * @returns `true` if the element is a match, `false` otherwise.\n   *\n   * #### Notes\n   * This function uses the builtin browser capabilities when possible,\n   * falling back onto a document query otherwise.\n   */\n  export function matches(element: Element, selector: string): boolean {\n    return Private.protoMatchFunc.call(element, selector);\n  }\n}\n\n/**\n * The namespace for the module implementation details.\n */\nnamespace Private {\n  /**\n   * A type alias for an object hash.\n   */\n  export type StringMap<T> = { [key: string]: T };\n\n  /**\n   * A cache of computed selector specificity values.\n   */\n  export const specificityCache: StringMap<number> = Object.create(null);\n\n  /**\n   * A cache of computed selector validity.\n   */\n  export const validityCache: StringMap<boolean> = Object.create(null);\n\n  /**\n   * An empty element for testing selector validity.\n   */\n  export const testElem = document.createElement('div');\n\n  /**\n   * A cross-browser CSS selector matching prototype function.\n   */\n  export const protoMatchFunc = (() => {\n    let proto = Element.prototype as any;\n    return (\n      proto.matches ||\n      proto.matchesSelector ||\n      proto.mozMatchesSelector ||\n      proto.msMatchesSelector ||\n      proto.oMatchesSelector ||\n      proto.webkitMatchesSelector ||\n      function (selector: string) {\n        let elem = this as Element;\n        let matches = elem.ownerDocument\n          ? elem.ownerDocument.querySelectorAll(selector)\n          : [];\n        return Array.prototype.indexOf.call(matches, elem) !== -1;\n      }\n    );\n  })();\n\n  /**\n   * Calculate the specificity of a single selector.\n   *\n   * The behavior is undefined if the selector is invalid.\n   */\n  export function calculateSingle(selector: string): number {\n    // Ignore anything after the first comma.\n    selector = selector.split(',', 1)[0];\n\n    // Setup the aggregate counters.\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\n    // Apply a regex to the front of the selector. If it succeeds, that\n    // portion of the selector is removed. Returns a success/fail flag.\n    function match(re: RegExp): boolean {\n      let match = selector.match(re);\n      if (match === null) {\n        return false;\n      }\n      selector = selector.slice(match[0].length);\n      return true;\n    }\n\n    // Replace the negation pseudo-class (which is ignored),\n    // but keep its inner content (which is not ignored).\n    selector = selector.replace(NEGATION_RE, ' $1 ');\n\n    // Continue matching until the selector is consumed.\n    while (selector.length > 0) {\n      // Match an ID selector.\n      if (match(ID_RE)) {\n        a++;\n        continue;\n      }\n\n      // Match a class selector.\n      if (match(CLASS_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match an attribute selector.\n      if (match(ATTR_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match a pseudo-element selector. This is done before matching\n      // a pseudo-class since this regex overlaps with that regex.\n      if (match(PSEUDO_ELEM_RE)) {\n        c++;\n        continue;\n      }\n\n      // Match a pseudo-class selector.\n      if (match(PSEDUO_CLASS_RE)) {\n        b++;\n        continue;\n      }\n\n      // Match a plain type selector.\n      if (match(TYPE_RE)) {\n        c++;\n        continue;\n      }\n\n      // Finally, match any ignored characters.\n      if (match(IGNORE_RE)) {\n        continue;\n      }\n\n      // At this point, the selector is assumed to be invalid.\n      return 0;\n    }\n\n    // Clamp each component to a reasonable base.\n    a = Math.min(a, 0xff);\n    b = Math.min(b, 0xff);\n    c = Math.min(c, 0xff);\n\n    // Combine the components into a single result.\n    return (a << 16) | (b << 8) | c;\n  }\n\n  /**\n   * A regex which matches an ID selector at string start.\n   */\n  const ID_RE = /^#[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches a class selector at string start.\n   */\n  const CLASS_RE = /^\\.[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches an attribute selector at string start.\n   */\n  const ATTR_RE = /^\\[[^\\]]+\\]/;\n\n  /**\n   * A regex which matches a type selector at string start.\n   */\n  const TYPE_RE = /^[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches a pseudo-element selector at string start.\n   */\n  const PSEUDO_ELEM_RE =\n    /^(::[^\\s\\+>~#\\.\\[:]+|:first-line|:first-letter|:before|:after)/;\n\n  /**\n   * A regex which matches a pseudo-class selector at string start.\n   */\n  const PSEDUO_CLASS_RE = /^:[^\\s\\+>~#\\.\\[:]+/;\n\n  /**\n   * A regex which matches ignored characters at string start.\n   */\n  const IGNORE_RE = /^[\\s\\+>~\\*]+/;\n\n  /**\n   * A regex which matches the negation pseudo-class globally.\n   */\n  const NEGATION_RE = /:not\\(([^\\)]+)\\)/g;\n}\n"],"names":[],"mappings":"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"}
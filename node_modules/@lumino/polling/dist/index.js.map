{"version":3,"file":"index.js","sources":["../src/poll.ts","../src/ratelimiter.ts"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { JSONExt, PromiseDelegate } from '@lumino/coreutils';\n\nimport { IObservableDisposable } from '@lumino/disposable';\n\nimport { ISignal, Signal } from '@lumino/signaling';\n\nimport { IPoll } from './index';\n\n/**\n * A class that wraps an asynchronous function to poll at a regular interval\n * with exponential increases to the interval length if the poll fails.\n *\n * @typeparam T - The resolved type of the factory's promises.\n * Defaults to `any`.\n *\n * @typeparam U - The rejected type of the factory's promises.\n * Defaults to `any`.\n *\n * @typeparam V - An optional type to extend the phases supported by a poll.\n * Defaults to `standby`, which already exists in the `Phase` type.\n */\nexport class Poll<T = any, U = any, V extends string = 'standby'>\n  implements IObservableDisposable, IPoll<T, U, V>\n{\n  /**\n   * Instantiate a new poll with exponential backoff in case of failure.\n   *\n   * @param options - The poll instantiation options.\n   */\n  constructor(options: Poll.IOptions<T, U, V>) {\n    this._factory = options.factory;\n    this._linger = options.linger ?? Private.DEFAULT_LINGER;\n    this._standby = options.standby || Private.DEFAULT_STANDBY;\n    this._state = { ...Private.DEFAULT_STATE, timestamp: new Date().getTime() };\n\n    // Normalize poll frequency `max` to be the greater of\n    // default `max`, `options.frequency.max`, or `options.frequency.interval`.\n    const frequency = options.frequency || {};\n    const max = Math.max(\n      frequency.interval || 0,\n      frequency.max || 0,\n      Private.DEFAULT_FREQUENCY.max\n    );\n    this.frequency = { ...Private.DEFAULT_FREQUENCY, ...frequency, ...{ max } };\n\n    this.name = options.name || Private.DEFAULT_NAME;\n\n    if ('auto' in options ? options.auto : true) {\n      setTimeout(() => this.start());\n    }\n  }\n\n  /**\n   * The name of the poll.\n   */\n  readonly name: string;\n\n  /**\n   * A signal emitted when the poll is disposed.\n   */\n  get disposed(): ISignal<this, void> {\n    return this._disposed;\n  }\n\n  /**\n   * The polling frequency parameters.\n   */\n  get frequency(): IPoll.Frequency {\n    return this._frequency;\n  }\n  set frequency(frequency: IPoll.Frequency) {\n    if (this.isDisposed || JSONExt.deepEqual(frequency, this.frequency || {})) {\n      return;\n    }\n\n    let { backoff, interval, max } = frequency;\n\n    interval = Math.round(interval);\n    max = Math.round(max);\n\n    if (typeof backoff === 'number' && backoff < 1) {\n      throw new Error('Poll backoff growth factor must be at least 1');\n    }\n\n    if ((interval < 0 || interval > max) && interval !== Poll.NEVER) {\n      throw new Error('Poll interval must be between 0 and max');\n    }\n\n    if (max > Poll.MAX_INTERVAL && max !== Poll.NEVER) {\n      throw new Error(`Max interval must be less than ${Poll.MAX_INTERVAL}`);\n    }\n\n    this._frequency = { backoff, interval, max };\n  }\n\n  /**\n   * Whether the poll is disposed.\n   */\n  get isDisposed(): boolean {\n    return this.state.phase === 'disposed';\n  }\n\n  /**\n   * Indicates when the poll switches to standby.\n   */\n  get standby(): Poll.Standby | (() => boolean | Poll.Standby) {\n    return this._standby;\n  }\n  set standby(standby: Poll.Standby | (() => boolean | Poll.Standby)) {\n    if (this.isDisposed || this.standby === standby) {\n      return;\n    }\n\n    this._standby = standby;\n  }\n\n  /**\n   * The poll state, which is the content of the current poll tick.\n   */\n  get state(): IPoll.State<T, U, V> {\n    return this._state;\n  }\n\n  /**\n   * A promise that resolves when the poll next ticks.\n   */\n  get tick(): Promise<this> {\n    return this._tick.promise;\n  }\n\n  /**\n   * A signal emitted when the poll ticks and fires off a new request.\n   */\n  get ticked(): ISignal<this, IPoll.State<T, U, V>> {\n    return this._ticked;\n  }\n\n  /**\n   * Return an async iterator that yields every tick.\n   */\n  async *[Symbol.asyncIterator](): AsyncIterableIterator<IPoll.State<T, U, V>> {\n    while (!this.isDisposed) {\n      yield this.state;\n      await this.tick.catch(() => undefined);\n    }\n  }\n\n  /**\n   * Dispose the poll.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n\n    this._state = {\n      ...Private.DISPOSED_STATE,\n      timestamp: new Date().getTime()\n    };\n    this._tick.promise.catch(_ => undefined);\n    this._tick.reject(new Error(`Poll (${this.name}) is disposed.`));\n    this._disposed.emit(undefined);\n    Signal.clearData(this);\n  }\n\n  /**\n   * Refreshes the poll. Schedules `refreshed` tick if necessary.\n   *\n   * @returns A promise that resolves after tick is scheduled and never rejects.\n   *\n   * #### Notes\n   * The returned promise resolves after the tick is scheduled, but before\n   * the polling action is run. To wait until after the poll action executes,\n   * await the `poll.tick` promise: `await poll.refresh(); await poll.tick;`\n   */\n  refresh(): Promise<void> {\n    return this.schedule({\n      cancel: ({ phase }) => phase === 'refreshed',\n      interval: Poll.IMMEDIATE,\n      phase: 'refreshed'\n    });\n  }\n\n  /**\n   * Schedule the next poll tick.\n   *\n   * @param next - The next poll state data to schedule. Defaults to standby.\n   *\n   * @param next.cancel - Cancels state transition if function returns `true`.\n   *\n   * @returns A promise that resolves when the next poll state is active.\n   *\n   * #### Notes\n   * This method is not meant to be invoked by user code typically. It is public\n   * to allow poll instances to be composed into classes that schedule ticks.\n   */\n  async schedule(\n    next: Partial<\n      IPoll.State<T, U, V> & { cancel: (last: IPoll.State<T, U, V>) => boolean }\n    > = {}\n  ): Promise<void> {\n    if (this.isDisposed) {\n      return;\n    }\n\n    // Check if the phase transition should be canceled.\n    if (next.cancel && next.cancel(this.state)) {\n      return;\n    }\n\n    // Update poll state.\n    const pending = this._tick;\n    const scheduled = new PromiseDelegate<this>();\n    const state = {\n      interval: this.frequency.interval,\n      payload: null,\n      phase: 'standby',\n      timestamp: new Date().getTime(),\n      ...next\n    } as IPoll.State<T, U, V>;\n    this._state = state;\n    this._tick = scheduled;\n\n    // Clear the schedule if possible.\n    clearTimeout(this._timeout);\n\n    // Emit ticked signal, resolve pending promise, and await its settlement.\n    this._ticked.emit(this.state);\n    pending.resolve(this);\n    await pending.promise;\n\n    if (state.interval === Poll.NEVER) {\n      this._timeout = undefined;\n      return;\n    }\n\n    // Schedule next execution and cache its timeout handle.\n    const execute = () => {\n      if (this.isDisposed || this.tick !== scheduled.promise) {\n        return;\n      }\n\n      this._execute();\n    };\n\n    // Cache the handle in case it needs to be unscheduled.\n    this._timeout = setTimeout(execute, state.interval);\n  }\n\n  /**\n   * Starts the poll. Schedules `started` tick if necessary.\n   *\n   * @returns A promise that resolves after tick is scheduled and never rejects.\n   */\n  start(): Promise<void> {\n    return this.schedule({\n      cancel: ({ phase }) =>\n        phase !== 'constructed' && phase !== 'standby' && phase !== 'stopped',\n      interval: Poll.IMMEDIATE,\n      phase: 'started'\n    });\n  }\n\n  /**\n   * Stops the poll. Schedules `stopped` tick if necessary.\n   *\n   * @returns A promise that resolves after tick is scheduled and never rejects.\n   */\n  stop(): Promise<void> {\n    return this.schedule({\n      cancel: ({ phase }) => phase === 'stopped',\n      interval: Poll.NEVER,\n      phase: 'stopped'\n    });\n  }\n\n  /**\n   * Whether the poll is hidden.\n   *\n   * #### Notes\n   * This property is only relevant in a browser context.\n   */\n  protected get hidden(): boolean {\n    return Private.hidden;\n  }\n\n  /**\n   * Execute a new poll factory promise or stand by if necessary.\n   */\n  private _execute(): void {\n    let standby =\n      typeof this.standby === 'function' ? this.standby() : this.standby;\n\n    // Check if execution should proceed, linger, or stand by.\n    if (standby === 'never') {\n      standby = false;\n    } else if (standby === 'when-hidden') {\n      if (this.hidden) {\n        standby = ++this._lingered > this._linger;\n      } else {\n        this._lingered = 0;\n        standby = false;\n      }\n    }\n\n    // If in standby mode schedule next tick without calling the factory.\n    if (standby) {\n      void this.schedule();\n      return;\n    }\n\n    const pending = this.tick;\n\n    this._factory(this.state)\n      .then((resolved: T) => {\n        if (this.isDisposed || this.tick !== pending) {\n          return;\n        }\n\n        void this.schedule({\n          payload: resolved,\n          phase: this.state.phase === 'rejected' ? 'reconnected' : 'resolved'\n        });\n      })\n      .catch((rejected: U) => {\n        if (this.isDisposed || this.tick !== pending) {\n          return;\n        }\n\n        void this.schedule({\n          interval: Private.sleep(this.frequency, this.state),\n          payload: rejected,\n          phase: 'rejected'\n        });\n      });\n  }\n\n  private _disposed = new Signal<this, void>(this);\n  private _factory: Poll.Factory<T, U, V>;\n  private _frequency: IPoll.Frequency;\n  private _linger: number;\n  private _lingered = 0;\n  private _standby: Poll.Standby | (() => boolean | Poll.Standby);\n  private _state: IPoll.State<T, U, V>;\n  private _tick = new PromiseDelegate<this>();\n  private _ticked = new Signal<this, IPoll.State<T, U, V>>(this);\n  private _timeout: ReturnType<typeof setTimeout> | undefined;\n}\n\n/**\n * A namespace for `Poll` types, interfaces, and statics.\n */\nexport namespace Poll {\n  /**\n   * A promise factory that returns an individual poll request.\n   *\n   * @typeparam T - The resolved type of the factory's promises.\n   *\n   * @typeparam U - The rejected type of the factory's promises.\n   *\n   * @typeparam V - The type to extend the phases supported by a poll.\n   */\n  export type Factory<T, U, V extends string> = (\n    state: IPoll.State<T, U, V>\n  ) => Promise<T>;\n\n  /**\n   * Indicates when the poll switches to standby.\n   */\n  export type Standby = 'never' | 'when-hidden';\n\n  /**\n   * Instantiation options for polls.\n   *\n   * @typeparam T - The resolved type of the factory's promises.\n   *\n   * @typeparam U - The rejected type of the factory's promises.\n   *\n   * @typeparam V - The type to extend the phases supported by a poll.\n   */\n  export interface IOptions<T, U, V extends string> {\n    /**\n     * Whether to begin polling automatically; defaults to `true`.\n     */\n    auto?: boolean;\n\n    /**\n     * A factory function that is passed a poll tick and returns a poll promise.\n     */\n    factory: Factory<T, U, V>;\n\n    /**\n     * The number of ticks to linger if poll switches to standby `when-hidden`.\n     * Defaults to `1`.\n     */\n    linger?: number;\n\n    /**\n     * The polling frequency parameters.\n     */\n    frequency?: Partial<IPoll.Frequency>;\n\n    /**\n     * The name of the poll.\n     * Defaults to `'unknown'`.\n     */\n    name?: string;\n\n    /**\n     * Indicates when the poll switches to standby or a function that returns\n     * a boolean or a `Poll.Standby` value to indicate whether to stand by.\n     * Defaults to `'when-hidden'`.\n     *\n     * #### Notes\n     * If a function is passed in, for any given context, it should be\n     * idempotent and safe to call multiple times. It will be called before each\n     * tick execution, but may be called by clients as well.\n     */\n    standby?: Standby | (() => boolean | Standby);\n  }\n  /**\n   * An interval value in ms that indicates the poll should tick immediately.\n   */\n  export const IMMEDIATE = 0;\n\n  /**\n   * Delays are 32-bit integers in many browsers so intervals need to be capped.\n   *\n   * #### Notes\n   * https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout#Maximum_delay_value\n   */\n  export const MAX_INTERVAL = 2147483647;\n\n  /**\n   * An interval value that indicates the poll should never tick.\n   */\n  export const NEVER = Infinity;\n}\n\n/**\n * A namespace for private module data.\n */\nnamespace Private {\n  /**\n   * The default backoff growth rate if `backoff` is `true`.\n   */\n  export const DEFAULT_BACKOFF = 3;\n\n  /**\n   * The default polling frequency.\n   */\n  export const DEFAULT_FREQUENCY: IPoll.Frequency = {\n    backoff: true,\n    interval: 1000,\n    max: 30 * 1000\n  };\n\n  /**\n   * The default number of times to `linger` when a poll is hidden.\n   */\n  export const DEFAULT_LINGER = 1;\n\n  /**\n   * The default poll name.\n   */\n  export const DEFAULT_NAME = 'unknown';\n\n  /**\n   * The default poll standby behavior.\n   */\n  export const DEFAULT_STANDBY: Poll.Standby = 'when-hidden';\n\n  /**\n   * The first poll tick state's default values superseded in constructor.\n   */\n  export const DEFAULT_STATE: IPoll.State<any, any, any> = {\n    interval: Poll.NEVER,\n    payload: null,\n    phase: 'constructed',\n    timestamp: new Date(0).getTime()\n  };\n\n  /**\n   * The disposed tick state values.\n   */\n  export const DISPOSED_STATE: IPoll.State<any, any, any> = {\n    interval: Poll.NEVER,\n    payload: null,\n    phase: 'disposed',\n    timestamp: new Date(0).getTime()\n  };\n\n  /**\n   * Returns the number of milliseconds to sleep before the next tick.\n   *\n   * @param frequency - The poll's base frequency.\n   * @param last - The poll's last tick.\n   */\n  export function sleep(\n    frequency: IPoll.Frequency,\n    last: IPoll.State<any, any, any>\n  ): number {\n    const { backoff, interval, max } = frequency;\n\n    if (interval === Poll.NEVER) {\n      return interval;\n    }\n\n    const growth =\n      backoff === true ? DEFAULT_BACKOFF : backoff === false ? 1 : backoff;\n    const random = getRandomIntInclusive(interval, last.interval * growth);\n\n    return Math.min(max, random);\n  }\n\n  /**\n   * Keep track of whether the document is hidden. This flag is only relevant in\n   * a browser context.\n   *\n   * Listen to `visibilitychange` event to set the `hidden` flag.\n   *\n   * Listening to `pagehide` is also necessary because Safari support for\n   * `visibilitychange` events is partial, cf.\n   * https://developer.mozilla.org/docs/Web/API/Document/visibilitychange_event\n   */\n  export let hidden = (() => {\n    if (typeof document === 'undefined') {\n      return false;\n    }\n    document.addEventListener('visibilitychange', () => {\n      hidden = document.visibilityState === 'hidden';\n    });\n    document.addEventListener('pagehide', () => {\n      hidden = document.visibilityState === 'hidden';\n    });\n    return document.visibilityState === 'hidden';\n  })();\n\n  /**\n   * Get a random integer between min and max, inclusive of both.\n   *\n   * #### Notes\n   * From\n   * https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Math/random#Getting_a_random_integer_between_two_values_inclusive\n   *\n   * From the MDN page: It might be tempting to use Math.round() to accomplish\n   * that, but doing so would cause your random numbers to follow a non-uniform\n   * distribution, which may not be acceptable for your needs.\n   */\n  function getRandomIntInclusive(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n}\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\nimport { PromiseDelegate } from '@lumino/coreutils';\n\nimport { IRateLimiter } from './index';\n\nimport { Poll } from './poll';\n\n/**\n * A base class to implement rate limiters with different invocation strategies.\n *\n * @typeparam T - The resolved type of the underlying function.\n *\n * @typeparam U - The rejected type of the underlying function.\n *\n * @typeparam V - Arguments for the underlying function.\n */\nexport abstract class RateLimiter<T, U, V extends any[]>\n  implements IRateLimiter<T, U, V>\n{\n  /**\n   * Instantiate a rate limiter.\n   *\n   * @param fn - The function to rate limit.\n   *\n   * @param limit - The rate limit; defaults to 500ms.\n   */\n  constructor(fn: (...args: V) => T | Promise<T>, limit = 500) {\n    this.limit = limit;\n    this.poll = new Poll({\n      auto: false,\n      factory: async () => {\n        const { args } = this;\n        this.args = undefined;\n        return fn(...args!);\n      },\n      frequency: { backoff: false, interval: Poll.NEVER, max: Poll.NEVER },\n      standby: 'never'\n    });\n    this.payload = new PromiseDelegate();\n    this.poll.ticked.connect((_, state) => {\n      const { payload } = this;\n\n      if (state.phase === 'resolved') {\n        this.payload = new PromiseDelegate();\n        payload!.resolve(state.payload as T);\n        return;\n      }\n\n      if (state.phase === 'rejected' || state.phase === 'stopped') {\n        this.payload = new PromiseDelegate();\n        payload!.promise.catch(_ => undefined);\n        payload!.reject(state.payload as U);\n        return;\n      }\n    }, this);\n  }\n\n  /**\n   * Whether the rate limiter is disposed.\n   */\n  get isDisposed(): boolean {\n    return this.payload === null;\n  }\n\n  /**\n   * Disposes the rate limiter.\n   */\n  dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.args = undefined;\n    this.payload = null;\n    this.poll.dispose();\n  }\n\n  /**\n   * The rate limit in milliseconds.\n   */\n  readonly limit: number;\n\n  /**\n   * Invoke the rate limited function.\n   */\n  abstract invoke(...args: V): Promise<T>;\n\n  /**\n   * Stop the function if it is mid-flight.\n   */\n  async stop(): Promise<void> {\n    return this.poll.stop();\n  }\n\n  /**\n   * Arguments for the underlying function.\n   */\n  protected args: V | undefined = undefined;\n\n  /**\n   * A promise that resolves on each successful invocation.\n   */\n  protected payload: PromiseDelegate<T> | null = null;\n\n  /**\n   * The underlying poll instance used by the rate limiter.\n   */\n  protected poll: Poll<T, U, 'invoked'>;\n}\n\n/**\n * Wraps and debounces a function that can be called multiple times and only\n * executes the underlying function one `interval` after the last invocation.\n *\n * @typeparam T - The resolved type of the underlying function. Defaults to any.\n *\n * @typeparam U - The rejected type of the underlying function. Defaults to any.\n *\n * @typeparam V - Arguments for the underlying function. Defaults to any[].\n */\nexport class Debouncer<\n  T = any,\n  U = any,\n  V extends any[] = any[]\n> extends RateLimiter<T, U, V> {\n  /**\n   * Invokes the function and only executes after rate limit has elapsed.\n   * Each invocation resets the timer.\n   */\n  invoke(...args: V): Promise<T> {\n    this.args = args;\n    void this.poll.schedule({ interval: this.limit, phase: 'invoked' });\n    return this.payload!.promise;\n  }\n}\n\n/**\n * Wraps and throttles a function that can be called multiple times and only\n * executes the underlying function once per `interval`.\n *\n * @typeparam T - The resolved type of the underlying function. Defaults to any.\n *\n * @typeparam U - The rejected type of the underlying function. Defaults to any.\n *\n * @typeparam V - Arguments for the underlying function. Defaults to any[].\n */\nexport class Throttler<\n  T = any,\n  U = any,\n  V extends any[] = any[]\n> extends RateLimiter<T, U, V> {\n  /**\n   * Instantiate a throttler.\n   *\n   * @param fn - The function being throttled.\n   *\n   * @param options - Throttling configuration or throttling limit in ms.\n   *\n   * #### Notes\n   * The `edge` defaults to `leading`; the `limit` defaults to `500`.\n   */\n  constructor(\n    fn: (...args: V) => T | Promise<T>,\n    options?: Throttler.IOptions | number\n  ) {\n    super(fn, typeof options === 'number' ? options : options && options.limit);\n    if (typeof options !== 'number' && options && options.edge === 'trailing') {\n      this._trailing = true;\n    }\n    this._interval = this._trailing ? this.limit : Poll.IMMEDIATE;\n  }\n\n  /**\n   * Throttles function invocations if one is currently in flight.\n   */\n  invoke(...args: V): Promise<T> {\n    const idle = this.poll.state.phase !== 'invoked';\n    if (idle || this._trailing) {\n      this.args = args;\n    }\n    if (idle) {\n      void this.poll.schedule({ interval: this._interval, phase: 'invoked' });\n    }\n    return this.payload!.promise;\n  }\n\n  private _interval: number;\n  private _trailing = false;\n}\n\n/**\n * A namespace for `Throttler` interfaces.\n */\nexport namespace Throttler {\n  /**\n   * Instantiation options for a `Throttler`.\n   */\n  export interface IOptions {\n    /**\n     * The throttling limit; defaults to 500ms.\n     */\n    limit?: number;\n\n    /**\n     * Whether to invoke at the leading or trailing edge of throttle cycle.\n     * Defaults to `leading`.\n     */\n    edge?: 'leading' | 'trailing';\n  }\n}\n"],"names":["Signal","PromiseDelegate","JSONExt"],"mappings":"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"}
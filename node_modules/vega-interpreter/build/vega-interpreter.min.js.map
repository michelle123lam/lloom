{"version":3,"file":"vega-interpreter.min.js","sources":["../src/constants.js","../src/ops-binary.js","../src/ops-unary.js","../src/functions.js","../src/interpret.js","../src/expression.js","../src/adjust-spatial.js"],"sourcesContent":["export default {\n  NaN:        NaN,\n  E:          Math.E,\n  LN2:        Math.LN2,\n  LN10:       Math.LN10,\n  LOG2E:      Math.LOG2E,\n  LOG10E:     Math.LOG10E,\n  PI:         Math.PI,\n  SQRT1_2:    Math.SQRT1_2,\n  SQRT2:      Math.SQRT2,\n  MIN_VALUE:  Number.MIN_VALUE,\n  MAX_VALUE:  Number.MAX_VALUE\n};\n","export default {\n  '*': (a, b) => a * b,\n  '+': (a, b) => a + b,\n  '-': (a, b) => a - b,\n  '/': (a, b) => a / b,\n  '%': (a, b) => a % b,\n  '>': (a, b) => a > b,\n  '<': (a, b) => a < b,\n  '<=': (a, b) => a <= b,\n  '>=': (a, b) => a >= b,\n  '==': (a, b) => a == b,\n  '!=': (a, b) => a != b,\n  '===': (a, b) => a === b,\n  '!==': (a, b) => a !== b,\n  '&': (a, b) => a & b,\n  '|': (a, b) => a | b,\n  '^': (a, b) => a ^ b,\n  '<<': (a, b) => a << b,\n  '>>': (a, b) => a >> b,\n  '>>>': (a, b) => a >>> b\n};\n","export default {\n  '+': a => +a,\n  '-': a => -a,\n  '~': a => ~a,\n  '!': a => !a\n};\n","const slice = Array.prototype.slice;\n\nconst apply = (m, args, cast) => {\n  const obj = cast ? cast(args[0]) : args[0];\n  return obj[m].apply(obj, slice.call(args, 1));\n};\n\nconst datetime = (y, m, d, H, M, S, ms) =>\n  new Date(y, m || 0, d != null ? d : 1, H || 0, M || 0, S || 0, ms || 0);\n\nexport default {\n  // math functions\n  isNaN:     Number.isNaN,\n  isFinite:  Number.isFinite,\n  abs:       Math.abs,\n  acos:      Math.acos,\n  asin:      Math.asin,\n  atan:      Math.atan,\n  atan2:     Math.atan2,\n  ceil:      Math.ceil,\n  cos:       Math.cos,\n  exp:       Math.exp,\n  floor:     Math.floor,\n  log:       Math.log,\n  max:       Math.max,\n  min:       Math.min,\n  pow:       Math.pow,\n  random:    Math.random,\n  round:     Math.round,\n  sin:       Math.sin,\n  sqrt:      Math.sqrt,\n  tan:       Math.tan,\n  clamp:     (a, b, c) => Math.max(b, Math.min(c, a)),\n\n  // date functions\n  now:              Date.now,\n  utc:              Date.UTC,\n  datetime:         datetime,\n  date:             d => new Date(d).getDate(),\n  day:              d => new Date(d).getDay(),\n  year:             d => new Date(d).getFullYear(),\n  month:            d => new Date(d).getMonth(),\n  hours:            d => new Date(d).getHours(),\n  minutes:          d => new Date(d).getMinutes(),\n  seconds:          d => new Date(d).getSeconds(),\n  milliseconds:     d => new Date(d).getMilliseconds(),\n  time:             d => new Date(d).getTime(),\n  timezoneoffset:   d => new Date(d).getTimezoneOffset(),\n  utcdate:          d => new Date(d).getUTCDate(),\n  utcday:           d => new Date(d).getUTCDay(),\n  utcyear:          d => new Date(d).getUTCFullYear(),\n  utcmonth:         d => new Date(d).getUTCMonth(),\n  utchours:         d => new Date(d).getUTCHours(),\n  utcminutes:       d => new Date(d).getUTCMinutes(),\n  utcseconds:       d => new Date(d).getUTCSeconds(),\n  utcmilliseconds:  d => new Date(d).getUTCMilliseconds(),\n\n  // sequence functions\n  length:       x => x.length,\n  join:         function() { return apply('join', arguments); },\n  indexof:      function() { return apply('indexOf', arguments); },\n  lastindexof:  function() { return apply('lastIndexOf', arguments); },\n  slice:        function() { return apply('slice', arguments); },\n  reverse:      x => x.slice().reverse(),\n\n  // string functions\n  parseFloat:   parseFloat,\n  parseInt:     parseInt,\n  upper:        x => String(x).toUpperCase(),\n  lower:        x => String(x).toLowerCase(),\n  substring:    function() { return apply('substring', arguments, String); },\n  split:        function() { return apply('split', arguments, String); },\n  replace:      function() { return apply('replace', arguments, String); },\n  trim:         x => String(x).trim(),\n\n  // regexp functions\n  regexp:       RegExp,\n  test:         (r, t) => RegExp(r).test(t)\n};\n","import Constants from './constants';\nimport Ops from './ops-binary';\nimport Unary from './ops-unary';\nimport Functions from './functions';\n\nconst EventFunctions = ['view', 'item', 'group', 'xy', 'x', 'y'];\nconst DisallowedMethods = new Set([\n  Function,\n  eval,\n  setTimeout,\n  setInterval\n]);\n\nif (typeof setImmediate === 'function') DisallowedMethods.add(setImmediate);\n\nconst Visitors = {\n  Literal: ($, n) => n.value,\n\n  Identifier: ($, n) => {\n    const id = n.name;\n    return $.memberDepth > 0 ? id\n      : id === 'datum' ? $.datum\n      : id === 'event' ? $.event\n      : id === 'item' ? $.item\n      : Constants[id] || $.params['$' + id];\n  },\n\n  MemberExpression: ($, n) => {\n    const d = !n.computed,\n          o = $(n.object);\n    if (d) $.memberDepth += 1;\n    const p = $(n.property);\n    if (d) $.memberDepth -= 1;\n    if (DisallowedMethods.has(o[p])) {\n      // eslint-disable-next-line no-console\n      console.error(`Prevented interpretation of member \"${p}\" which could lead to insecure code execution`);\n      return;\n    }\n    return o[p];\n  },\n\n  CallExpression: ($, n) => {\n    const args = n.arguments;\n    let name = n.callee.name;\n\n    // handle special internal functions used by encoders\n    // re-route to corresponding standard function\n    if (name.startsWith('_')) {\n      name = name.slice(1);\n    }\n\n    // special case \"if\" due to conditional evaluation of branches\n    return name === 'if'\n      ? ($(args[0]) ? $(args[1]) : $(args[2]))\n      : ($.fn[name] || Functions[name]).apply($.fn, args.map($));\n  },\n\n  ArrayExpression: ($, n) => n.elements.map($),\n\n  BinaryExpression: ($, n) => Ops[n.operator]($(n.left), $(n.right)),\n\n  UnaryExpression: ($, n) => Unary[n.operator]($(n.argument)),\n\n  ConditionalExpression: ($, n) => $(n.test)\n    ? $(n.consequent)\n    : $(n.alternate),\n\n  LogicalExpression: ($, n) => n.operator === '&&'\n    ? $(n.left) && $(n.right)\n    : $(n.left) || $(n.right),\n\n  ObjectExpression: ($, n) => n.properties.reduce((o, p) => {\n    $.memberDepth += 1;\n    const k = $(p.key);\n    $.memberDepth -= 1;\n    if (DisallowedMethods.has($(p.value))) {\n      // eslint-disable-next-line no-console\n      console.error(`Prevented interpretation of property \"${k}\" which could lead to insecure code execution`);\n    } else {\n      o[k] = $(p.value);\n    }\n    return o;\n  }, {})\n};\n\nexport default function(ast, fn, params, datum, event, item) {\n  const $ = n => Visitors[n.type]($, n);\n  $.memberDepth = 0;\n  $.fn = Object.create(fn);\n  $.params = params;\n  $.datum = datum;\n  $.event = event;\n  $.item = item;\n\n  // route event functions to annotated vega event context\n  EventFunctions.forEach(f => $.fn[f] = (...args) => event.vega[f](...args));\n\n  return $(ast);\n}\n","import adjustSpatial from './adjust-spatial';\nimport interpret from './interpret';\n\nexport default {\n  /**\n   * Parse an expression used to update an operator value.\n   */\n  operator(ctx, expr) {\n    const ast = expr.ast, fn = ctx.functions;\n    return _ => interpret(ast, fn, _);\n  },\n\n  /**\n   * Parse an expression provided as an operator parameter value.\n   */\n  parameter(ctx, expr) {\n    const ast = expr.ast, fn = ctx.functions;\n    return (datum, _) => interpret(ast, fn, _, datum);\n  },\n\n  /**\n   * Parse an expression applied to an event stream.\n   */\n  event(ctx, expr) {\n    const ast = expr.ast, fn = ctx.functions;\n    return event => interpret(ast, fn, undefined, undefined, event);\n  },\n\n  /**\n   * Parse an expression used to handle an event-driven operator update.\n   */\n  handler(ctx, expr) {\n    const ast = expr.ast, fn = ctx.functions;\n    return (_, event) => {\n      const datum = event.item && event.item.datum;\n      return interpret(ast, fn, _, datum, event);\n    };\n  },\n\n  /**\n   * Parse an expression that performs visual encoding.\n   */\n  encode(ctx, encode) {\n    const {marktype, channels} = encode,\n          fn = ctx.functions,\n          swap = marktype === 'group'\n              || marktype === 'image'\n              || marktype === 'rect';\n\n    return (item, _) => {\n      const datum = item.datum;\n      let m = 0, v;\n\n      for (const name in channels) {\n        v = interpret(channels[name].ast, fn, _, datum, undefined, item);\n        if (item[name] !== v) {\n          item[name] = v;\n          m = 1;\n        }\n      }\n\n      if (marktype !== 'rule') {\n        adjustSpatial(item, channels, swap);\n      }\n      return m;\n    };\n  }\n};\n","export default function(item, encode, swap) {\n  let t;\n\n  if (encode.x2) {\n    if (encode.x) {\n      if (swap && item.x > item.x2) {\n        t = item.x;\n        item.x = item.x2;\n        item.x2 = t;\n      }\n      item.width = item.x2 - item.x;\n    } else {\n      item.x = item.x2 - (item.width || 0);\n    }\n  }\n\n  if (encode.xc) {\n    item.x = item.xc - (item.width || 0) / 2;\n  }\n\n  if (encode.y2) {\n    if (encode.y) {\n      if (swap && item.y > item.y2) {\n        t = item.y;\n        item.y = item.y2;\n        item.y2 = t;\n      }\n      item.height = item.y2 - item.y;\n    } else {\n      item.y = item.y2 - (item.height || 0);\n    }\n  }\n\n  if (encode.yc) {\n    item.y = item.yc - (item.height || 0) / 2;\n  }\n}\n"],"names":["Constants","NaN","E","Math","LN2","LN10","LOG2E","LOG10E","PI","SQRT1_2","SQRT2","MIN_VALUE","Number","MAX_VALUE","Ops","*","a","b","+","-","/","%",">","<","<=",">=","==","!=","===","!==","&","|","^","<<",">>",">>>","Unary","slice","Array","prototype","apply","m","args","cast","obj","call","Functions","isNaN","isFinite","abs","acos","asin","atan","atan2","ceil","cos","exp","floor","log","max","min","pow","random","round","sin","sqrt","tan","clamp","c","now","Date","utc","UTC","datetime","y","d","H","M","S","ms","date","getDate","day","getDay","year","getFullYear","month","getMonth","hours","getHours","minutes","getMinutes","seconds","getSeconds","milliseconds","getMilliseconds","time","getTime","timezoneoffset","getTimezoneOffset","utcdate","getUTCDate","utcday","getUTCDay","utcyear","getUTCFullYear","utcmonth","getUTCMonth","utchours","getUTCHours","utcminutes","getUTCMinutes","utcseconds","getUTCSeconds","utcmilliseconds","getUTCMilliseconds","length","x","join","arguments","indexof","lastindexof","reverse","parseFloat","parseInt","upper","String","toUpperCase","lower","toLowerCase","substring","split","replace","trim","regexp","RegExp","test","r","t","EventFunctions","DisallowedMethods","Set","Function","eval","setTimeout","setInterval","setImmediate","add","Visitors","Literal","$","n","value","Identifier","id","name","memberDepth","datum","event","item","params","MemberExpression","computed","o","object","p","property","has","console","error","CallExpression","callee","startsWith","fn","map","ArrayExpression","elements","BinaryExpression","operator","left","right","UnaryExpression","argument","ConditionalExpression","consequent","alternate","LogicalExpression","ObjectExpression","properties","reduce","k","key","interpret","ast","type","Object","create","forEach","f","vega","expression","ctx","expr","functions","_","parameter","undefined","handler","encode","marktype","channels","swap","v","x2","width","xc","y2","height","yc","adjustSpatial"],"mappings":"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"}
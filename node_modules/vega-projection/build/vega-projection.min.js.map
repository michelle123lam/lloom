{"version":3,"file":"vega-projection.min.js","sources":["../../../node_modules/d3-array/src/fsum.js","../../../node_modules/d3-array/src/merge.js","../../../node_modules/d3-geo/src/math.js","../../../node_modules/d3-geo/src/noop.js","../../../node_modules/d3-geo/src/stream.js","../../../node_modules/d3-geo/src/cartesian.js","../../../node_modules/d3-geo/src/compose.js","../../../node_modules/d3-geo/src/rotation.js","../../../node_modules/d3-geo/src/circle.js","../../../node_modules/d3-geo/src/clip/buffer.js","../../../node_modules/d3-geo/src/pointEqual.js","../../../node_modules/d3-geo/src/clip/rejoin.js","../../../node_modules/d3-geo/src/polygonContains.js","../../../node_modules/d3-geo/src/clip/index.js","../../../node_modules/d3-geo/src/clip/antimeridian.js","../../../node_modules/d3-geo/src/clip/circle.js","../../../node_modules/d3-geo/src/clip/rectangle.js","../../../node_modules/d3-geo/src/clip/line.js","../../../node_modules/d3-geo/src/identity.js","../../../node_modules/d3-geo/src/path/area.js","../../../node_modules/d3-geo/src/path/bounds.js","../../../node_modules/d3-geo/src/path/centroid.js","../../../node_modules/d3-geo/src/path/context.js","../../../node_modules/d3-geo/src/path/measure.js","../../../node_modules/d3-geo/src/path/string.js","../../../node_modules/d3-geo/src/path/index.js","../../../node_modules/d3-geo/src/transform.js","../../../node_modules/d3-geo/src/projection/fit.js","../../../node_modules/d3-geo/src/projection/resample.js","../../../node_modules/d3-geo/src/projection/index.js","../../../node_modules/d3-geo/src/projection/conic.js","../../../node_modules/d3-geo/src/projection/conicEqualArea.js","../../../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../../../node_modules/d3-geo/src/projection/albers.js","../../../node_modules/d3-geo/src/projection/azimuthal.js","../../../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../../../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../../../node_modules/d3-geo/src/projection/mercator.js","../../../node_modules/d3-geo/src/projection/conicConformal.js","../../../node_modules/d3-geo/src/projection/equirectangular.js","../../../node_modules/d3-geo/src/projection/conicEquidistant.js","../../../node_modules/d3-geo/src/projection/equalEarth.js","../../../node_modules/d3-geo/src/projection/gnomonic.js","../../../node_modules/d3-geo/src/projection/naturalEarth1.js","../../../node_modules/d3-geo/src/projection/orthographic.js","../../../node_modules/d3-geo/src/projection/stereographic.js","../../../node_modules/d3-geo/src/projection/transverseMercator.js","../../../node_modules/d3-geo-projection/src/math.js","../../../node_modules/d3-geo-projection/src/mollweide.js","../src/projections.js","../../../node_modules/d3-geo/src/projection/albersUsa.js","../../../node_modules/d3-geo/src/projection/identity.js"],"sourcesContent":["// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math.js\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pi, pow, sign, sin, sqrt, tan} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {mercatorRaw} from \"./mercator.js\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy),\n      l = atan2(x, abs(fy)) * sign(fy);\n    if (fy * n < 0)\n      l -= pi * sign(x) * sign(fy);\n    return [l / n, 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {equirectangularRaw} from \"./equirectangular.js\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y,\n        l = atan2(x, abs(gy)) * sign(gy);\n    if (gy * n < 0)\n      l -= pi * sign(x) * sign(gy);\n    return [l / n, g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math.js\";\nimport {mercatorProjection} from \"./mercator.js\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2} from \"./math.js\";\n\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi), i = 30, delta;\n  do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  while (abs(delta) > epsilon && --i > 0);\n  return phi / 2;\n}\n\nexport function mollweideBromleyRaw(cx, cy, cp) {\n\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function(x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\n\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n\nexport default function() {\n  return projection(mollweideRaw)\n      .scale(169.529);\n}\n","import {\n  geoAlbers,\n  geoAlbersUsa,\n  geoAzimuthalEqualArea,\n  geoAzimuthalEquidistant,\n  geoConicConformal,\n  geoConicEqualArea,\n  geoConicEquidistant,\n  geoEqualEarth,\n  geoEquirectangular,\n  geoGnomonic,\n  geoIdentity,\n  geoMercator,\n  geoNaturalEarth1,\n  geoOrthographic,\n  geoPath,\n  geoStereographic,\n  geoTransverseMercator\n} from 'd3-geo';\n\nimport {\n  geoMollweide\n} from 'd3-geo-projection';\n\nimport {\n  registerScale\n} from 'vega-scale';\n\nconst defaultPath = geoPath();\n\nexport const projectionProperties = [\n  // standard properties in d3-geo\n  'clipAngle',\n  'clipExtent',\n  'scale',\n  'translate',\n  'center',\n  'rotate',\n  'parallels',\n  'precision',\n  'reflectX',\n  'reflectY',\n\n  // extended properties in d3-geo-projections\n  'coefficient',\n  'distance',\n  'fraction',\n  'lobes',\n  'parallel',\n  'radius',\n  'ratio',\n  'spacing',\n  'tilt'\n];\n\n/**\n * Augment projections with their type and a copy method.\n */\nfunction create(type, constructor) {\n  return function projection() {\n    const p = constructor();\n\n    p.type = type;\n\n    p.path = geoPath().projection(p);\n\n    p.copy = p.copy || function() {\n      const c = projection();\n      projectionProperties.forEach(prop => {\n        if (p[prop]) c[prop](p[prop]());\n      });\n      c.path.pointRadius(p.path.pointRadius());\n      return c;\n    };\n\n    return registerScale(p);\n  };\n}\n\nexport function projection(type, proj) {\n  if (!type || typeof type !== 'string') {\n    throw new Error('Projection type must be a name string.');\n  }\n  type = type.toLowerCase();\n  if (arguments.length > 1) {\n    projections[type] = create(type, proj);\n    return this;\n  } else {\n    return projections[type] || null;\n  }\n}\n\nexport function getProjectionPath(proj) {\n  return (proj && proj.path) || defaultPath;\n}\n\nconst projections = {\n  // base d3-geo projection types\n  albers:               geoAlbers,\n  albersusa:            geoAlbersUsa,\n  azimuthalequalarea:   geoAzimuthalEqualArea,\n  azimuthalequidistant: geoAzimuthalEquidistant,\n  conicconformal:       geoConicConformal,\n  conicequalarea:       geoConicEqualArea,\n  conicequidistant:     geoConicEquidistant,\n  equalEarth:           geoEqualEarth,\n  equirectangular:      geoEquirectangular,\n  gnomonic:             geoGnomonic,\n  identity:             geoIdentity,\n  mercator:             geoMercator,\n  mollweide:            geoMollweide,\n  naturalEarth1:        geoNaturalEarth1,\n  orthographic:         geoOrthographic,\n  stereographic:        geoStereographic,\n  transversemercator:   geoTransverseMercator\n};\n\nfor (const key in projections) {\n  projection(key, projections[key]);\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import clipRectangle from \"../clip/rectangle.js\";\nimport identity from \"../identity.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport {cos, degrees, radians, sin} from \"../math.js\";\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect\n      alpha = 0, ca, sa, // angle\n      x0 = null, y0, x1, y1, // clip extent\n      kx = 1, ky = 1,\n      transform = transformer({\n        point: function(x, y) {\n          var p = projection([x, y])\n          this.stream.point(p[0], p[1]);\n        }\n      }),\n      postclip = identity,\n      cache,\n      cacheStream;\n\n  function reset() {\n    kx = k * sx;\n    ky = k * sy;\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  function projection (p) {\n    var x = p[0] * kx, y = p[1] * ky;\n    if (alpha) {\n      var t = y * ca - x * sa;\n      x = x * ca + y * sa;\n      y = t;\n    }    \n    return [x + tx, y + ty];\n  }\n  projection.invert = function(p) {\n    var x = p[0] - tx, y = p[1] - ty;\n    if (alpha) {\n      var t = y * ca + x * sa;\n      x = x * ca - y * sa;\n      y = t;\n    }\n    return [x / kx, y / ky];\n  };\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n  };\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, reset()) : k;\n  };\n  projection.translate = function(_) {\n    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];\n  }\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, sa = sin(alpha), ca = cos(alpha), reset()) : alpha * degrees;\n  };\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;\n  };\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;\n  };\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  return projection;\n}\n"],"names":["Adder","constructor","this","_partials","Float64Array","_n","add","x","p","i","j","y","hi","lo","Math","abs","valueOf","n","merge","arrays","Array","from","array","flatten","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","log","pow","sin","sign","sqrt","tan","acos","asin","noop","streamGeometry","geometry","stream","streamGeometryType","hasOwnProperty","type","streamObjectType","Feature","object","FeatureCollection","features","length","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","geoStream","spherical","cartesian","lambda","phi","cosPhi","cartesianDot","a","b","cartesianCross","cartesianAddInPlace","cartesianScale","vector","k","cartesianNormalizeInPlace","d","l","compose","invert","rotationIdentity","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","z","circleRadius","cosRadius","radius","clipBuffer","line","lines","m","push","rejoin","pop","concat","shift","result","pointEqual","Intersection","points","other","entry","o","e","v","clipRejoin","segments","compareIntersection","startInside","interpolate","subject","clip","forEach","segment","p0","p1","sort","link","start","current","isSubject","longitude","pointVisible","clipLine","sink","polygon","ring","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","sinPhi","normal","angle","winding","sum","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","pointLine","clean","ringSegments","filter","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","clipCircle","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","t","q","polar","q1","code","r","c0","v0","v00","point2","c","t0","t1","sinRadius","step","circleStream","clipMax","clipMin","clipRectangle","x0","y0","x1","y1","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","max","min","ax","ay","dx","dy","x00","y00","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","pathArea","Infinity","boundsStream","bounds","boundsStream$1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","pathCentroid","PathContext","context","_context","prototype","_radius","pointRadius","_","_line","_point","closePath","moveTo","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","pathMeasure","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","floor","RangeError","strings","arguments","appendRound","s","geoPath","projection","projectionStream","contextStream","path","apply","measure","pathBounds","identity","transformer","methods","TransformStream","key","fit","fitBounds","clipExtent","scale","translate","fitExtent","extent","h","fitSize","size","fitWidth","width","fitHeight","height","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","recenter","center","reset","transformRotate","undefined","clipAngle","reflectX","reflectY","precision","conicProjection","parallels","conicEqualAreaRaw","sy0","forward","cylindricalEqualAreaRaw","r0","r0y","geoConicEqualArea","geoAlbers","conicEqualArea","azimuthalRaw","cx","cy","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","cy0","f","fy","equirectangularRaw","conicEquidistantRaw","g","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","sqrt2","mollweideBromleyTheta","cp","cpsinPhi","mollweideRaw","mollweideBromleyRaw","defaultPath","projectionProperties","proj","Error","toLowerCase","projections","copy","prop","registerScale","create","albers","albersusa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalequalarea","azimuthalequidistant","conicconformal","conicequalarea","conicequidistant","equalEarth","equirectangular","gnomonic","sa","tx","ty","kx","ky","mercator","mollweide","naturalEarth1","orthographic","stereographic","transversemercator"],"mappings":"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"}
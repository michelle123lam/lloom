import type { View, SignalListeners } from './types';
import type { VisualizationSpec, EmbedOptions } from 'vega-embed';
export declare function updateMultipleDatasetsInView(view: View, data: Record<string, unknown>): void;
export declare function shallowEqual<T extends Record<string, any>>(a?: T, b?: T, ignore?: Set<string>): boolean;
export declare function removeSignalListenersFromView(view: View, signalListeners: SignalListeners): boolean;
export declare function addSignalListenersToView(view: View, signalListeners: SignalListeners): boolean;
export declare function getUniqueFieldNames(specs: VisualizationSpec[]): Set<string>;
interface SpecChanges {
    width: false | number;
    height: false | number;
    isExpensive: boolean;
}
export declare function computeSpecChanges(newSpec: VisualizationSpec, oldSpec: VisualizationSpec): false | SpecChanges;
export declare function combineSpecWithDimension(spec: VisualizationSpec, options: EmbedOptions): VisualizationSpec;
export {};

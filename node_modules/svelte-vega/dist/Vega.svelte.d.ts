import { SvelteComponentTyped } from "svelte";
import type { EmbedOptions } from 'vega-embed';
import type { SignalListeners, VisualizationSpec, View } from './types';
declare const __propDef: {
    props: {
        spec: VisualizationSpec;
        options?: EmbedOptions<string, import("vega-typings").Renderers> | undefined;
        data?: Record<string, unknown> | undefined;
        signalListeners?: SignalListeners | undefined;
        view?: View | undefined;
    };
    events: {
        onNewView: CustomEvent<any>;
        onError: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export type VegaProps = typeof __propDef.props;
export type VegaEvents = typeof __propDef.events;
export type VegaSlots = typeof __propDef.slots;
export default class Vega extends SvelteComponentTyped<VegaProps, VegaEvents, VegaSlots> {
}
export {};
